/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ColorParamStatic } from './ColorParamStatic';
import {
    instanceOfColorParamStatic,
    ColorParamStaticFromJSON,
    ColorParamStaticFromJSONTyped,
    ColorParamStaticToJSON,
} from './ColorParamStatic';
import type { DerivedColor } from './DerivedColor';
import {
    instanceOfDerivedColor,
    DerivedColorFromJSON,
    DerivedColorFromJSONTyped,
    DerivedColorToJSON,
} from './DerivedColor';

/**
 * @type ColorParam
 * 
 * @export
 */
export type ColorParam = { type: 'derived' } & DerivedColor | { type: 'static' } & ColorParamStatic;

export function ColorParamFromJSON(json: any): ColorParam {
    return ColorParamFromJSONTyped(json, false);
}

export function ColorParamFromJSONTyped(json: any, ignoreDiscriminator: boolean): ColorParam {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'derived':
            return {...DerivedColorFromJSONTyped(json, true), type: 'derived'};
        case 'static':
            return {...ColorParamStaticFromJSONTyped(json, true), type: 'static'};
        default:
            throw new Error(`No variant of ColorParam exists with 'type=${json['type']}'`);
    }
}

export function ColorParamToJSON(value?: ColorParam | null): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'derived':
            return DerivedColorToJSON(value);
        case 'static':
            return ColorParamStaticToJSON(value);
        default:
            throw new Error(`No variant of ColorParam exists with 'type=${value['type']}'`);
    }

}

