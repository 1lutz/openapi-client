/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MockDatasetDataSourceLoadingInfo } from './MockDatasetDataSourceLoadingInfo';
import {
    MockDatasetDataSourceLoadingInfoFromJSON,
    MockDatasetDataSourceLoadingInfoFromJSONTyped,
    MockDatasetDataSourceLoadingInfoToJSON,
} from './MockDatasetDataSourceLoadingInfo';
import type { VectorResultDescriptor } from './VectorResultDescriptor';
import {
    VectorResultDescriptorFromJSON,
    VectorResultDescriptorFromJSONTyped,
    VectorResultDescriptorToJSON,
} from './VectorResultDescriptor';

/**
 * 
 * @export
 * @interface MockMetaData
 */
export interface MockMetaData {
    /**
     * 
     * @type {MockDatasetDataSourceLoadingInfo}
     * @memberof MockMetaData
     */
    loadingInfo: MockDatasetDataSourceLoadingInfo;
    /**
     * 
     * @type {VectorResultDescriptor}
     * @memberof MockMetaData
     */
    resultDescriptor: VectorResultDescriptor;
}

/**
 * Check if a given object implements the MockMetaData interface.
 */
export function instanceOfMockMetaData(value: object): boolean {
    if (!('loadingInfo' in value)) return false;
    if (!('resultDescriptor' in value)) return false;
    return true;
}

export function MockMetaDataFromJSON(json: any): MockMetaData {
    return MockMetaDataFromJSONTyped(json, false);
}

export function MockMetaDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): MockMetaData {
    if (json == null) {
        return json;
    }
    return {
        
        'loadingInfo': MockDatasetDataSourceLoadingInfoFromJSON(json['loadingInfo']),
        'resultDescriptor': VectorResultDescriptorFromJSON(json['resultDescriptor']),
    };
}

export function MockMetaDataToJSON(value?: MockMetaData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'loadingInfo': MockDatasetDataSourceLoadingInfoToJSON(value['loadingInfo']),
        'resultDescriptor': VectorResultDescriptorToJSON(value['resultDescriptor']),
    };
}

