/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { DataIdExternal } from './DataIdExternal';
import {
    instanceOfDataIdExternal,
    DataIdExternalFromJSON,
    DataIdExternalFromJSONTyped,
    DataIdExternalToJSON,
} from './DataIdExternal';
import type { DataIdInternal } from './DataIdInternal';
import {
    instanceOfDataIdInternal,
    DataIdInternalFromJSON,
    DataIdInternalFromJSONTyped,
    DataIdInternalToJSON,
} from './DataIdInternal';

/**
 * @type DataId
 * 
 * @export
 */
export type DataId = { type: 'external' } & DataIdExternal | { type: 'internal' } & DataIdInternal;

export function DataIdFromJSON(json: any): DataId {
    return DataIdFromJSONTyped(json, false);
}

export function DataIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataId {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'external':
            return Object.assign({}, DataIdExternalFromJSONTyped(json, true), { type: 'external' });
        case 'internal':
            return Object.assign({}, DataIdInternalFromJSONTyped(json, true), { type: 'internal' });
        default:
            throw new Error(`No variant of DataId exists with 'type=${json['type']}'`);
    }
}

export function DataIdToJSON(value?: DataId | null): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'external':
            return DataIdExternalToJSON(value);
        case 'internal':
            return DataIdInternalToJSON(value);
        default:
            throw new Error(`No variant of DataId exists with 'type=${value['type']}'`);
    }

}

