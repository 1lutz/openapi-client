/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MeasurementContinuous
 */
export interface MeasurementContinuous {
    /**
     * 
     * @type {string}
     * @memberof MeasurementContinuous
     */
    measurement: string;
    /**
     * 
     * @type {string}
     * @memberof MeasurementContinuous
     */
    type: MeasurementContinuousTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof MeasurementContinuous
     */
    unit?: string;
}


/**
 * @export
 */
export const MeasurementContinuousTypeEnum = {
    Continuous: 'continuous'
} as const;
export type MeasurementContinuousTypeEnum = typeof MeasurementContinuousTypeEnum[keyof typeof MeasurementContinuousTypeEnum];


/**
 * Check if a given object implements the MeasurementContinuous interface.
 */
export function instanceOfMeasurementContinuous(value: object): boolean {
    if (!('measurement' in value)) return false;
    if (!('type' in value)) return false;
    return true;
}

export function MeasurementContinuousFromJSON(json: any): MeasurementContinuous {
    return MeasurementContinuousFromJSONTyped(json, false);
}

export function MeasurementContinuousFromJSONTyped(json: any, ignoreDiscriminator: boolean): MeasurementContinuous {
    if (json == null) {
        return json;
    }
    return {
        
        'measurement': json['measurement'],
        'type': json['type'],
        'unit': json['unit'] == null ? undefined : json['unit'],
    };
}

export function MeasurementContinuousToJSON(value?: MeasurementContinuous | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'measurement': value['measurement'],
        'type': value['type'],
        'unit': value['unit'],
    };
}

