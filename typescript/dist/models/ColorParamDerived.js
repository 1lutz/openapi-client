"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ColorParamDerivedToJSON = exports.ColorParamDerivedFromJSONTyped = exports.ColorParamDerivedFromJSON = exports.instanceOfColorParamDerived = exports.ColorParamDerivedTypeEnum = void 0;
const Colorizer_1 = require("./Colorizer");
/**
 * @export
 */
exports.ColorParamDerivedTypeEnum = {
    Derived: 'derived'
};
/**
 * Check if a given object implements the ColorParamDerived interface.
 */
function instanceOfColorParamDerived(value) {
    if (!('attribute' in value))
        return false;
    if (!('colorizer' in value))
        return false;
    if (!('type' in value))
        return false;
    return true;
}
exports.instanceOfColorParamDerived = instanceOfColorParamDerived;
function ColorParamDerivedFromJSON(json) {
    return ColorParamDerivedFromJSONTyped(json, false);
}
exports.ColorParamDerivedFromJSON = ColorParamDerivedFromJSON;
function ColorParamDerivedFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'attribute': json['attribute'],
        'colorizer': (0, Colorizer_1.ColorizerFromJSON)(json['colorizer']),
        'type': json['type'],
    };
}
exports.ColorParamDerivedFromJSONTyped = ColorParamDerivedFromJSONTyped;
function ColorParamDerivedToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'attribute': value['attribute'],
        'colorizer': (0, Colorizer_1.ColorizerToJSON)(value['colorizer']),
        'type': value['type'],
    };
}
exports.ColorParamDerivedToJSON = ColorParamDerivedToJSON;
